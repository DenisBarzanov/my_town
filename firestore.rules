rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    match /issues/{issueId} {

      function isOwner() {
        return resource.data.uid == request.auth.uid
      }

      allow read;
      allow write: if isOwner();
      allow create;
    }

    match /issue-votes/{voteId} {
      function isOwner() {
        return resource.data.userId == request.auth.uid
      }
      function isCreatingWithOwnData() {
        return request.resource.data.userId == request.auth.uid;
      }
      allow read;
      allow write: if isOwner()
      allow create: if isCreatingWithOwnData();
    }

    match /users/{userId} {
      function isOwnerOfExistingUser() {
        return resource.id == request.auth.uid
      }
      function isSignedIn() {
        return request.auth != null;
      }
      function isOwnerOfId(userId) {
        return request.auth.uid == userId;
      }
      allow read;
      allow write: if isOwnerOfExistingUser();
      allow create: if isSignedIn() && isOwnerOfId(userId);
    }
  }
}